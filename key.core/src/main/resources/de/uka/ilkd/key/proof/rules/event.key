\sorts {
    // Used to store unique method constants that are created upon proof loading.
    MethodName;
    Event;
}

\programVariables{
    // Needed to ensure reasoning about temporal properties, e.g. event1 happened before event2.
    int eventNr;
}

\predicates {
    /* An eventState can be used to reason about the state of a program given that a method call happened.
       Note: As the name implies, eventStates are nonrigid because they depend on the state of a program. */
    \nonRigid eventState(Event, boolean);
}

\functions{
    /* An event is used to reason about the execution of distinct (overloaded) method calls.
       Note: \unique is needed because:
        - 1. An event is injective.
        - 2. Two distinct events e1 and e2 must never be equal by definition of an event.
        This is exactly what the \unique flag ensures (see KeyBook p. 112). */
    \unique Event event(Object, MethodName, Seq);
}
